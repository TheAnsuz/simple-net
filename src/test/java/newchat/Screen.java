package newchat;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.function.Consumer;

/**
 *
 * @author Adrian MRV. aka AMRV || Ansuz
 */
public class Screen extends javax.swing.JFrame {

    public final List<Consumer<String>> onSendEvents = new ArrayList<>();

    public static enum Action {
        ERROR(Color.RED, "!"),
        MESSAGE_SENT(Color.GRAY, "<< "),
        MESSAGE_RECIVED(Color.DARK_GRAY, ">> "),
        INFO(Color.BLUE, "?");

        final Color color;
        final String prefix;

        Action(Color color, String prefix) {
            this.color = color;
            this.prefix = prefix;
        }
    }

    private final StringBuilder history = new StringBuilder();
    private final String leading = "<html>\n"
            + "  <head>\n"
            + "    \n"
            + "  </head>\n"
            + "  <body>";
    private final String trailing = "</body>\n"
            + "</html>";

    /**
     * Creates new form Screen
     *
     * @param title the title of the screen
     */
    public Screen(String title) {
        initComponents();
        super.setTitle(title);
        super.setVisible(true);
    }

    public void send(String text) {
        onSendEvents.forEach((consumer) -> {
            consumer.accept(text);
        });
    }

    public void log(Action action, String text) {
        this.log(action.color, action.prefix + text);
    }

    public void log(Color color, String text) {
        history.append(buildTextLog(color, text));
        chatHistory.setText(leading
                + history.toString()
                + trailing
        );
        System.out.println(chatHistory.getText());
    }

    private String buildTextLog(Color color, String text) {
        String temp = "rgb(" + color.getRed() + "," + color.getGreen() + "," + color
                .getBlue() + ")";
        return "<p style='color:" + temp + "'>" + text + "</p>";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chatMessage = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatHistory = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chatMessage.setName("chatMessage"); // NOI18N
        chatMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatMessageActionPerformed(evt);
            }
        });
        chatMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chatMessageKeyPressed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setMaximumSize(new java.awt.Dimension(388, 32767));
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        chatHistory.setEditable(false);
        chatHistory.setContentType("text/html"); // NOI18N
        chatHistory.setMaximumSize(new java.awt.Dimension(388, 488));
        chatHistory.setName("chatHistory"); // NOI18N
        jScrollPane1.setViewportView(chatHistory);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addComponent(chatMessage))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chatMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chatMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chatMessageKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (chatMessage.getText().length() > 0)
                send(chatMessage.getText());
            chatMessage.setText("");
        }
    }//GEN-LAST:event_chatMessageKeyPressed

    private void chatMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chatMessageActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane chatHistory;
    private javax.swing.JTextField chatMessage;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
